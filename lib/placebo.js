// Generated by CoffeeScript 1.6.3
var axon, config, level, method, send, socket, time, timers, _ref;

axon = require('axon');

socket = null;

timers = {};

config = {};

exports.configure = function(settings) {
  var key, value;
  for (key in settings) {
    value = settings[key];
    config[key] = value;
  }
  return this;
};

exports.connect = function(port, host, fn) {
  socket = axon.socket('push');
  socket.format('json');
  socket.connect(port, host, fn);
  return this;
};

exports.send = send = function(message, options) {
  var log;
  if (socket === null) {
    throw new Error("Placebo: service not connected");
  }
  log = {
    message: message,
    level: options.level || config.level,
    color: options.color || config.color,
    time: options.time || Date.now(),
    server: options.server || config.server,
    process: options.process || config.process
  };
  socket.send(log);
  return this;
};

_ref = {
  debug: 0,
  system: 1,
  info: 2,
  warning: 3,
  error: 4
};
for (method in _ref) {
  level = _ref[method];
  exports[method] = function(message, options) {
    if (options == null) {
      options = {};
    }
    options.level = level;
    return send(message, options);
  };
}

exports.time = time = function(flag) {
  var message;
  if (timers[flag]) {
    time = Date.now() - timers[flag] / 1000;
    message = [flag, ': ', time, 's'].join("");
    send(message, {
      level: -1
    });
    delete timers[flag];
  } else {
    timers[flag] = Date.now();
  }
  return this;
};
